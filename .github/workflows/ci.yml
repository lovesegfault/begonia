name: CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "**" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          # - 1.39.0  # MSRV
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
  nix-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v7
      - name: Cachix
        uses: cachix/cachix-action@v4
        with:
          name: begonia
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          attributes: begonia
  nix-shell:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v7
      - name: Cachix
        uses: cachix/cachix-action@v4
        with:
          name: begonia
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          attributes: shellBuildInputs
  crate2nix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v7
      - name: Cachix
        uses: cachix/cachix-action@v4
        with:
          name: begonia
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          skipNixBuild: true
      - name: crate2nix
        run: |
          cmpPath="$(mktemp -d actions.XXXXXX)"
          cp Cargo.nix "$cmpPath"
          nix-shell --run "crate2nix generate" || exit 1
          diff Cargo.nix "$cmpPath/Cargo.nix" || exit 1
